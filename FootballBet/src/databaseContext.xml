<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- hibernate template -->
	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
		<!-- property name="cacheQueries" value="true" /-->
	</bean>

	<!-- Database -->

	<!-- bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					false
				</prop>
				<!--prop key="hibernate.cache.use_second_level_cache">true</prop-->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!--prop key="hibernate.cache.use_query_cache">true</prop-->
				<prop key="hibernate.cache.provider_class">
					net.sf.ehcache.hibernate.SingletonEhCacheProvider
				</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>org.pt.bet.domain.Card</value>
				<value>org.pt.bet.domain.CompetitionType</value>
				<value>org.pt.bet.domain.Continent</value>
				<value>org.pt.bet.domain.Country</value>
				<value>org.pt.bet.domain.FailedPenalty</value>
				<value>org.pt.bet.domain.Game</value>
				<value>org.pt.bet.domain.Goal</value>
				<value>org.pt.bet.domain.Team</value>
				<value>org.pt.bet.domain.Tournament</value>
			</list>
		</property>
	</bean>
	<!-- mit externen Properties ... -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db.driverClass}" />
		<property name="jdbcUrl" value="${db.jdbcUrl}" />
		<property name="user" value="${db.user}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- Alternativ Datenquelle ueber JNDI -->
	<!-- jee:jndi-lookup id="dataSource" resource-ref="true" jndi-name="jdbc/pooledDS" /-->

	<!-- configure db properties from external file -->
	<!--
		fÃ¼r Spring 2.0 RC1: muss autowire="no" setzen:
		http://opensource.atlassian.com/projects/spring/browse/SPR-1953
		Ist ab RC2 gefixt werden
	-->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
</beans>

